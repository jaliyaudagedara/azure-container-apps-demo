name: Build and Deploy

on:
  push:
    branches: 
      [ main ]

  workflow_dispatch:      

env:
  REGISTRY: ravana.azurecr.io
  IMAGE_NAME: containers-apps-demo
  WEB_APP_IMAGE_NAME: web/blazor
  CUSTOMERS_API_IMAGE_NAME: customers/api
  ORDERS_API_IMAGE_NAME: orders/api

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        services: [ 
        {
          'id': 'web-blazor', 
          'imageName': 'web/blazor', 
          'directory': './src/ContainerAppsDemo.Web.Blazor'
        }, 
        {
          'id': 'customers-api', 
          'imageName': 'customers/api', 
          'directory': './src/ContainerAppsDemo.Customers.Api'
        }, 
        {
          'id': 'orders-api', 
          'imageName': 'orders/api', 
          'directory': './src/ContainerAppsDemo.Orders.Api'
        } 
      ]
    outputs:
      tag-web-blazor: ${{ steps.image-tag.outputs.tag-web-blazor }}
      tag-customers-api: ${{ steps.image-tag.outputs.tag-customers-api }}
      tag-orders-api: ${{ steps.image-tag.outputs.tag-orders-api }}
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.services.imageName }}
          tags: |
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          file: ${{ matrix.services.directory }}/Dockerfile

      - name: Output image tag
        id: image-tag
        run: echo "::set-output name=tag-${{ matrix.services.id }}::sha-$(git rev-parse --short HEAD)" | tr '[:upper:]' '[:lower:]'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to containerapp Web.Blazor
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "Starting Deploying Web"
            az containerapp update \
                --name capp-web-blazor-demo \
                --resource-group ${{ secrets.RESOURCE_GROUP }} \
                --image '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.WEB_APP_IMAGE_NAME }}:${{ needs.build.outputs.tag-web-blazor }}' \
                --registry-login-server ${{ env.REGISTRY }} \
                --registry-username  ${{ secrets.REGISTRY_USERNAME }} \
                --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
                --debug

      - name: Deploy to containerapp Customers.Api
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "Starting Deploying"
            az containerapp update \
                --name capp-customers-api-demo \
                --resource-group ${{ secrets.RESOURCE_GROUP }} \
                --image '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.CUSTOMERS_API_IMAGE_NAME }}:${{ needs.build.outputs.tag-customers-api }}' \
                --registry-login-server ${{ env.REGISTRY }} \
                --registry-username  ${{ secrets.REGISTRY_USERNAME }} \
                --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
                --debug

      - name: Deploy to containerapp Orders.Api
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
            echo "Starting Deploying"
            az containerapp update \
                --name capp-orders-api-demo \
                --resource-group ${{ secrets.RESOURCE_GROUP }} \
                --image '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.ORDERS_API_IMAGE_NAME }}:${{ needs.build.outputs.tag-orders-api }}' \
                --registry-login-server ${{ env.REGISTRY }} \
                --registry-username  ${{ secrets.REGISTRY_USERNAME }} \
                --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
                --debug